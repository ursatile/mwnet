@using Rockaway.WebApp.Models

<section class="row">
	<div class="col-6 cold-md-4 offset-md-2">
		<strong>Ticket Type</strong>
	</div>
	<div class="col-3 col-md-2 text-center">
		<strong>Quantity</strong>
	</div>
	<div class="col-3 col-md-2 col-2">
		<strong>Price</strong>
	</div>
</section>
<section class="row">
	@foreach (var tt in TicketTypes) {
		<div class="col-6 cold-md-4 offset-md-2">
			@tt.Name (@Format(tt.Price))
		</div>
		<div class="col-3 col-md-2 text-center">
			<a class="fas fa-square-minus" @onclick="() => Decrement(tt.Id)"></a>
			<input name="tickets[@tt.Id]" type="number" value="@quantities[tt.Id]"/>
			<a class="fas fa-square-plus" @onclick="() => Increment(tt.Id)"></a>
		</div>
		<div class="col-3 col-md-2 text-end">
			@Format(LineTotal(tt))
		</div>
	}
</section>
<section class="row">
	<div class="col-9 cold-md-6 offset-md-2">
		<strong>Order Total:</strong>
	</div>
	<div class="col-3 col-md-2 text-end">
		@Format(OrderTotal)
	</div>
</section>

@code {
	private Dictionary<Guid, int> quantities = new();

	private void Increment(Guid id) => quantities[id] = Math.Min(quantities[id] + 1, 10);
	private void Decrement(Guid id) => quantities[id] = Math.Max(quantities[id] - 1, 0);

	private List<TicketTypeViewData> ticketTypes = [];

	[Parameter]
	public List<TicketTypeViewData> TicketTypes {
		get => ticketTypes;
		set {
			ticketTypes = value;
			quantities = ticketTypes.ToDictionary(tt => tt.Id, _ => 0);
		}
	}

	decimal LineTotal(TicketTypeViewData tt) => quantities[tt.Id] * tt.Price;
	string Format(decimal price) => price.ToString("C", cultureInfo);

	private CultureInfo cultureInfo = CultureInfo.InvariantCulture;

	[Parameter]
	public string CultureName {
		get => cultureInfo.Name;
		set {
			if (value != cultureInfo.Name) cultureInfo = CultureInfo.CreateSpecificCulture(value);
		}
	}

	private decimal OrderTotal => ticketTypes.Sum(tt => tt.Price * quantities[tt.Id]);

}